# My Creality CR-10S Pro with MicroSwiss Hotend and Direct extruder conversion

# The CR-10S Pro has a major issue that causes print failures.
# However, some users report successful multi-day prints.
# For more information on the issue, read the discussion at
# https://github.com/KevinOConnor/klipper/issues/1113

# The touchscreen display and filament sensor are not configured in
# this version of the config file.

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
step_distance: .0125
endstop_pin: ^ar3
position_endstop: 0
position_max: 310
homing_speed: 80

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
step_distance: .0125
endstop_pin: ^ar14
position_endstop: 0
position_max: 310
homing_speed: 80

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
step_distance: .0025
#endstop_pin: ^ar18
#position_endstop: 0.5
endstop_pin: probe: z_virtual_endstop
position_min: -1.5
position_max: 400

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
step_distance: .00714
nozzle_diameter: 0.400
filament_diameter: 1.750

heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_extrude_temp: 170
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: ar8
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog14
control: pid
pid_Kp: 690.34
pid_Ki: 111.47
pid_Kd: 1068.83

min_temp: 0
max_temp: 110

[fan]
pin: ar9

[mcu]
serial: /dev/ttyUSB0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 10
max_z_accel: 50
square_corner_velocity: 7.5

#[display]
#lcd_type: st7920
#cs_pin: ar16
#sclk_pin: ar23
#sid_pin: ar17
#encoder_pins: ^ar33, ^ar31
#click_pin: ^!ar35

[probe]
pin: ^ar18
x_offset: -41.0
y_offset: -8.0
z_offset: 3
speed: 10.0


# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.  When
# using a probe to home the z-axis, it is recommended to define
# a [homing_override] section in printer.cfg to home toward the
# center of the print area.
#
#  Visual Examples:
#   rectangular bed, probe_count = 3,3:
#               x---x---x (max_point)
#               |
#               x---x---x
#                       |
#   (min_point) x---x---x
#
#   round bed, round_probe_count = 5, bed_radius = r:
#                  x (0,r) end
#                /
#              x---x---x
#                        \
#   (-r,0) x---x---x---x---x (r,0)
#            \
#              x---x---x
#                    /
#                  x  (0,-r) start
#
[bed_mesh]
speed: 120
horizontal_move_z: 5
samples: 2
samples_result: average
sample_retract_dist: 2.0
min_point: 20,20.
max_point: 250,280
probe_count: 5,5


# Homing override. One may use this mechanism to run a series of
# g-code commands in place of a G28 found in the normal g-code input.
# This may be useful on printers that require a specific procedure to
# home the machine.
[homing_override]
gcode:
	G1 Z10 F600
	G28 X0 Y0
	G0 X115 Y150 F6000
	G28 Z0
	G1 Z0.2 F300

axes: z
#   The axes to override. For example, if this is set to "z" then the
#   override script will only be run when the z axis is homed (eg, via
#   a "G28" or "G28 Z0" command). Note, the override script should
#   still home all axes. The default is "xyz" which causes the
#   override script to be run in place of all G28 commands.
#set_position_x:
#set_position_y:
set_position_z: 0
#   If specified, the printer will assume the axis is at the specified
#   position prior to running the above g-code commands. Setting this
#   disables homing checks for that axis. This may be useful if the
#   head must move prior to invoking the normal G28 mechanism for an
#   axis. The default is to not force a position for an axis.


[gcode_macro G29]
gcode:
	G1 Z10 F600
	BED_MESH_CALIBRATE